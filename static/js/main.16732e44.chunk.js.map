{"version":3,"sources":["Intro.jsx","Work.jsx","Projects.jsx","Body.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Intro","props","className","href","onClick","openResume","src","alt","id","Panel","Collapse","WorkPanelHeader","image","company","info","WorkInfo","time","desc","disabled","desc_","Skills","Languages","Frameworks","Technologies","Work","map","elem","index","collapseName","expandIconPosition","key","header","name","Meta","Card","ProjectDescription","tools","ProjectTitle","award","ProjectInfo","github","demo","Projects","actions","size","push","target","rel","hoverable","cover","title","description","Body","window","open","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16732e44.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Mail, Linkedin, GitHub, ChevronsDown, FileText } from 'react-feather';\r\nimport './Intro.css';\r\n\r\nlet Intro = (props) => {\r\n  return (\r\n    <div className=\"banner\">\r\n      <div className=\"text\">\r\n        Hi there! My name's <br/>\r\n        <span className=\"name\">JACK PAN.</span> <br/>\r\n        I'm a computer science student who likes to solve his problems with <span className=\"code\">code</span>.<br/>\r\n        <span className=\"icons\">\r\n          <a href=\"https://github.com/xcjackpan\"><GitHub className={\"icon\"} /></a>\r\n          <a href=\"mailto:xcjackpan99@gmail.com\"><Mail className={\"icon\"} /></a>\r\n          <a href=\"https://www.linkedin.com/in/xcjackpan/\"><Linkedin className={\"icon\"}/></a>\r\n          <FileText onClick={props.openResume} className={\"icon\"}/>\r\n        </span>\r\n      </div>\r\n      <img className=\"photo\" src=\"images/face.jpg\" alt=\"me\"/>\r\n      <div className=\"mouse\">\r\n      </div>\r\n      <a href=\"#body\" id=\"chevrons\"><ChevronsDown className=\"icon\" /></a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Intro;\r\n","import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport './Work.css';\r\nimport { Collapse, Tag } from 'antd';\r\nlet Panel = Collapse.Panel;\r\n\r\nlet WorkPanelHeader = (props) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <img className=\"icon\" src={props.image} alt=\":)\"/>\r\n      <div className=\"heading\">\r\n        <span className=\"company\">{props.company}</span>\r\n        <span className=\"info\">{props.info}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nlet WorkInfo = [\r\n  {\r\n    company: \"Bloomberg\", image:\"images/bloomberg.png\", \r\n    info: \"Incoming Software Engineer | May - Aug 2021\",\r\n    time: \"May - Aug 2021\",\r\n    desc:\r\n    <div className=\"description\">\r\n      Placeholder\r\n    </div>,\r\n    disabled: true,\r\n  },\r\n  {\r\n    company: \"Wish (Again!)\", image:\"images/wish.png\", \r\n    info: \"Software Engineer, Payments | Sep - Dec 2020\",\r\n    time: \"Sep - Dec 2020\",\r\n    desc:\r\n    <div className=\"description\">\r\n      I returned to the Payments team at Wish, this time working remotely from Canada!\r\n      <br />\r\n      <br />\r\n      I designed and built a data aggregation pipeline using <strong>Python</strong> and <strong>SQL</strong> that automatically\r\n      generated financial reports from internal data. This tool helped meet a <strong>critical auditing requirement needed ahead \r\n      of <a href=\"https://www.investors.com/news/technology/wish-ipo-puts-17-billion-plus-valuation-e-commerce-contextlogic/\">\r\n        the company's IPO\r\n      </a></strong>.\r\n      <br />\r\n      <br />\r\n      I also built a suite of anti-fraud logic all throughout the payments processing lifecycle — combining a wide variety of \r\n      signals like a user's purchase history, their actions on a page, and the aggregated behavior of other similar users — which\r\n      led to impacts like a <strong>40% reduction in the number of fraudulent attempted payment information updates</strong>.\r\n      <br />\r\n      <br />\r\n      I helped defend against a sudden and critical attack on our payments system by fraudsters, working with the buyer risk team\r\n      to push out urgent defensive measures that <strong>prevented >$667k in losses to fraudulent transactions</strong>\r\n    </div>,\r\n    disabled: false,\r\n  },\r\n  {\r\n    company: \"Wish\", image:\"images/wish.png\", \r\n    info: \"Software Engineer, Payments | Jan - April 2020\",\r\n    time: \"Jan - April 2020\",\r\n    desc_:\r\n    <ul>\r\n      <li>Engineered functionality in <strong>Python</strong> with <strong>Tornado</strong> and <strong>MongoDB</strong> to block orders when user behavior was suspicious; added an admin UI in React for non-technical staff to easily configure detection parameters</li>\r\n      <li>Built a system to unban certain users deemed unlikely to offend again, increasing GMV by <strong>$120K per month</strong></li>\r\n      <li>Implemented a flow in <strong>Python</strong> with <strong>Tornado</strong> and <strong>MongoDB</strong> to retry processing failed payments from customers under special conditions, with a projected recovery of <strong>$45 million annually</strong></li>\r\n      <li>Developed features and fixed bugs to improve payments processing flow, reduce customer fraud, and enhance the user checkout experience – leading to impacts like a 7% growth in orders by promoting multi-installment payments</li>\r\n    </ul>,\r\n    desc:\r\n    <div className=\"description\">\r\n      I worked on the Payments team at Wish, using <strong>Python</strong> to work on code that processed the purchases\r\n      of millions of customers.\r\n      <br />\r\n      <br />\r\n      Using <strong>Python</strong> with <strong>Tornado</strong>, I built functionality that would block a user's order when \r\n      we thought they were behaving suspiciously. Along with this, I included an admin panel UI in <strong>React</strong> that \r\n      allowed non-technical staff to configure the detection parameters.\r\n      <br />\r\n      <br />\r\n      I developed a process for retrying failed payments that met certain conditions with a projected \r\n      annual recovery of <strong>$45 million</strong>. \r\n      <br />\r\n      <br />\r\n      I also implemented a feature to unban banned users that we deemed unlikely to\r\n      offend again, increasing our gross merchandise value by <strong>$120K per month</strong>.\r\n    </div>,\r\n    disabled: false,\r\n  },\r\n  {\r\n    company: \"D2L\", image:\"images/d2l.png\", \r\n    info: \"Software Developer | May - Aug 2019\",\r\n    time: \"May - Aug 2019\",\r\n    desc_:\r\n    <ul>\r\n      <li>Improved NLP algorithm to generate questions from text, increasing yield of acceptable questions by ~60%</li>\r\n      <li>Led the design and development of in-browser PDF whiteboard and editor</li>\r\n      <li>Implemented major frontend features in Typescript using React</li>\r\n      <li>Built crucial backend functionality with Node.js, Express, and MongoDB</li>\r\n    </ul>,\r\n    desc:\r\n    <div className=\"description\">\r\n      In trying to generate practice quizzes from text passages, I improved \r\n      our algorithm to increase output of acceptable questions by <strong>~60%</strong>.\r\n      <br/><br/>\r\n      I led a technical team in the development of an in-browser PDF whiteboard and editor, \r\n      similar to OneNote. Our <strong>React</strong> frontend was written in <strong>TypeScript</strong>.\r\n      The backend used <strong>Node</strong> and <strong>MongoDB</strong> with <strong>Mongoose</strong>.\r\n    </div>,\r\n    disabled: false,\r\n  },\r\n  {\r\n    company: \"DragonAgile\", image:\"images/dragonagile.png\", \r\n    info: \"Software Developer | May - Aug 2018\",\r\n    time: \"May - Aug 2018\",\r\n    desc_:\r\n      <ul>\r\n        <li>Developed permissions manager using React, Node.js, and Java</li>\r\n        <li>Built plugins for Jira and Confluence in Java</li>\r\n        <li>Engineered front-end improvements to the company website using HTML and CSS</li>\r\n      </ul>,\r\n    desc: \r\n      <div className=\"description\">\r\n        Using <strong>React</strong>, <strong>Node</strong>, and <strong>Java</strong>,\r\n        I developed a full-stack web app to help manage a client's user permissions in their \r\n        version control software.\r\n        <br/><br/>\r\n        I also designed and prototyped a variety of Jira plugins using <strong>Java</strong>. Each\r\n        was built according to specifications from our clients.\r\n      </div>,\r\n    disabled: false,\r\n  },\r\n]\r\n\r\nlet Skills = {\r\n  Languages: [\"Python\", \"JavaScript\", \"TypeScript\", \"Go\", \"SQL\", \"CSS\", \"C++\", \"C\"], \r\n  Frameworks: [\"Flask\", \"Tornado\", \"React\", \"Redux\", \"Express\"], \r\n  Technologies: [\"Node\", \"MongoDB\", \"Docker\", \"Git\"]\r\n};\r\n\r\nlet Work = (props) => {\r\n  return (\r\n    <div className=\"work\">\r\n      <span className=\"title\">Experience</span>\r\n      <div className=\"experience-block\">\r\n        <div className=\"timeline\">\r\n          {WorkInfo.map((elem, index) => {\r\n            let collapseName = \"work-item\"\r\n            if (elem[\"disabled\"]) {\r\n              collapseName = \"work-item-disabled\"\r\n            }\r\n            return (\r\n              <Collapse className={collapseName} expandIconPosition=\"right\">\r\n                <Panel className=\"panel\"\r\n                       key={index}\r\n                       header={<WorkPanelHeader image={elem.image} company={elem.company} info={elem.info}/>}>\r\n                  {elem.desc}\r\n                </Panel>\r\n              </Collapse>\r\n            )\r\n          })}\r\n        </div>\r\n        <div className=\"resume-skills\">\r\n          <p className=\"resume-button\" onClick={props.openResume}>Resume</p>\r\n          {[\"Languages\", \"Frameworks\", \"Technologies\"].map((elem) => {\r\n            return (\r\n              <div className=\"skill-block\">\r\n                <span className=\"subtitle\">{elem}</span>\r\n                <div className=\"skills\">\r\n                  {Skills[elem].map((name) => {\r\n                    return <Tag className=\"skill\">{name}</Tag>;\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Work;\r\n","import React from 'react';\r\nimport { Card } from 'antd';\r\nimport { Code } from 'react-feather';\r\nimport './Projects.css';\r\nconst { Meta } = Card;\r\n\r\nlet ProjectDescription = (props) => {\r\n  return (\r\n    <div className=\"description\">\r\n      <span className=\"tools\">{props.tools}</span> <br/>\r\n      <span className=\"desc\">{props.desc}</span> <br/>\r\n      <br/>\r\n    </div>\r\n  )\r\n}\r\n\r\nlet ProjectTitle = (props) => {\r\n  return (\r\n    <div className=\"title-block\">\r\n      <span className=\"project-name\">{props.name}</span> {props.award ? <span className=\"award\">{props.award}</span> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nlet ProjectInfo = [\r\n  {\r\n    name: \"UWClasswatch\",\r\n    image:\"images/classwatch.png\",\r\n    tools:\"React, Node, Typescript, MongoDB\",\r\n    desc: \r\n      `A web app that lets students subscribe to receive email notifications when a course they're interested in \r\n      has a spot open for enrolment. 1.2k+ users.`,\r\n    github: \"https://github.com/xcjackpan/classwatch-v2\",\r\n    demo: \"http://www.uwclasswatch.com/\",\r\n  },\r\n  {\r\n    name: \"AR World\",\r\n    image:\"images/arworld.png\", \r\n    tools:\"Kotlin, React, Node\",\r\n    desc: \r\n      `An Android app identifies images through the camera and replaces them \r\n      in AR with videos uploaded through our web interface.`,\r\n    github: \"https://github.com/xcjackpan/ar-world\",\r\n    demo: \"https://www.youtube.com/watch?v=BUm1GCDVzN8\",\r\n    award: \"Best AR App @ PennApps XX\",\r\n  },\r\n  {\r\n    name: \"Claire\",\r\n    image:\"images/claire.png\", \r\n    tools:\"React, Node, Firebase\",\r\n    desc: \r\n      `A chatbot for senior citizens which uses sentiment analysis to compute \r\n      and display metrics on mental wellbeing.`,\r\n    github: \"https://github.com/xcjackpan/claire\",\r\n    award: \"Finalist @ HackThe6ix\",\r\n  },\r\n  {\r\n    name: \"Chess DLC\",\r\n    image:\"images/chess_dlc.png\",\r\n    tools:\"Go, React, Typescript\",\r\n    desc: \r\n      `A web client for me to experiment with my nerdiest hobby: designing variants of chess. Users can freely create\r\n      and invite each other to matches. Games are all played in real-time thanks to websockets concurrently managed\r\n      on the backend.`,\r\n    github: \"https://github.com/xcjackpan/chess_dlc\",\r\n    demo: \"http://chessdlc-env.eba-73rgmsgm.ca-central-1.elasticbeanstalk.com/\",\r\n  },\r\n  {\r\n    name: \"Ceci\",\r\n    image:\"images/ceci.png\", \r\n    tools:\"Python\",\r\n    desc: \r\n      `An interpreter for a programming language of my own design. Composed of a CFG, tokenizer, LL(1) parser, and\r\n      evaluator built from scratch. Includes functions, control flow statements, and my own novel construct: pipelining.`,\r\n    github: \"https://github.com/xcjackpan/ceci\",\r\n    demo: \"http://ceci-env.eba-3tte3bus.ca-central-1.elasticbeanstalk.com/\",\r\n  },\r\n  {\r\n    name: \"JAKE\",\r\n    image:\"images/jake.png\", \r\n    tools:\"C++\",\r\n    desc: \r\n      `An NLP keyword-extraction algorithm implemented according to RAKE white paper. \r\n      Modified to factor in long phrases with irrelevant words and popularity of neighbours.`,\r\n    github: \"https://github.com/xcjackpan/jake\",\r\n  },\r\n  {\r\n    name: \"Dunderbot\",\r\n    image:\"images/dunderbot.png\", \r\n    tools:\"Javascript, React\",\r\n    desc: `A web app using Markov chains to generate fresh new scenes of The Office that are only mildly incoherent.`,\r\n    github: \"https://github.com/xcjackpan/dunderbot\",\r\n    demo: \"https://dunderbot.herokuapp.com/\",\r\n  }\r\n]\r\n\r\nlet Projects = () => {\r\n  return (\r\n    <div className=\"projects\">\r\n      <span className=\"title\">Projects</span>\r\n      <div className=\"project-grid\">\r\n        {ProjectInfo.map((elem) => {\r\n          let actions = [<a href={elem.github}><Code size={20}/></a>];\r\n          if (elem.demo) {\r\n            actions.push(<a href={elem.demo} target=\"_blank\" rel=\"noopener noreferrer\"><span>DEMO</span></a>);\r\n          }\r\n          return <Card hoverable className=\"card\" cover={<img className=\"splash\" src={elem.image} alt=\":)\"/>}\r\n                       actions={actions}>\r\n                   <Meta title={<ProjectTitle name={elem.name} award={elem.award}/>} \r\n                                description={<ProjectDescription tools={elem.tools} desc={elem.desc}/>} />\r\n                 </Card>\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport Work from './Work.jsx';\r\nimport Projects from './Projects.jsx';\r\nimport './Body.css';\r\n\r\nlet Body = (props) => {\r\n  return (\r\n    <div id=\"body\" className=\"body\">\r\n      <Work openResume={props.openResume} />\r\n      <Projects />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from 'react';\nimport Intro from './Intro.jsx';\nimport Body from './Body.jsx';\nimport './App.css';\n\nlet openResume = () => {\n\twindow.open('files/resume.pdf', '_blank', 'fullscreen=yes');\n}\n\nlet App = () => {\n  return (\n    <div className=\"App\">\n      <Intro openResume={openResume}/>\n      <Body openResume={openResume}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}